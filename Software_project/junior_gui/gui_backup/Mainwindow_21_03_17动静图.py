# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

####################### 头代码 #######################
from matplotlib import pyplot as plt
import numpy as np
from matplotlib.widgets import Cursor
import xlrd
import matplotlib
matplotlib.use("Qt5Agg")  # 声明使用QT5
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT as NavigationToolbar
import matplotlib.pyplot as plt
from PyQt5 import QtCore, QtGui, QtWidgets

system = 0

data_x = None; data_y = None; N_n = 0;
C_x = -0.5; C_y = 0; D_d = 1.5;
class Myfigure(FigureCanvas):
    def __init__(self):
        self.fig, self.ax = plt.subplots(figsize=(6, 4), facecolor='#FFD7C4')
        # self.fig = plt.figure(facecolor='#FFD7C4')  # 可选参数,facecolor为背景颜色
        # self.axes = self.fig.subplots() #也可以用add_subplot
        FigureCanvas.__init__(self, self.fig) #初始化激活widget中的plt部分

    def change_sys(self):
        # o represents 'windows', 1 represents 'mac'
        global system
        system = 1 - system
        print('切换系统成功！！！')
        # Ui_MainWindow().textEdit.setText('切换系统成功！！')

    def GIF(self):
        plt.rcParams['font.family']='SimHei'
        plt.rcParams['font.sans-serif']=['SimHei']
        plt.rcParams['axes.unicode_minus']=False
        fig, ax = self.fig, self.ax
        try:
            y1 = []
            for i in range(1000):
                y1.append(np.sin(i/10))
                ax.cla()
                ax.set_title("Data")
                ax.set_xlabel("Time/s")
                ax.set_ylabel("Strength")
                ax.set_xlim(0, (i+1)*1.5)
                ax.set_ylim(-1, 1)
                ax.grid()
                ax.plot(y1, color='b', linewidth=0.8, linestyle='-', label='快乐曲线')
                ax.legend(loc='best')
                plt.pause(1e-1)
                self.draw()
            # y = list(range(100))
            # ax.plot(y)
            # self.draw()
        except:
            print(Exception)


    def drawing(self):
        A0 = 590.8939192; B1 = 2.303196492; B2 = -0.0004665871929; B3 = -0.000007877923077; B4 = 3.020550598E-08; B5 = -4.876599743E-11
        x = [(A0 + B1 * i + B2 * i ** 2 + B3 * i ** 3 + B4 * i ** 4 + B5 * i ** 5) for i in range(256)]

        # 读取excel
        excel = xlrd.open_workbook(r"../光谱仪正确的鲸鱼数据.xls")  # 读取excel文件，相当于打开excel
        sheet = excel.sheet_by_name("Sheet1")  # 通过sheet页的名字，跳转sheet页

        # 获取数据
        y = [sheet.cell_value(0,i) for i in range(256)]

        ############ python_to_arduino ###############
        # import serial  # 导入serial库
        #
        # ser = serial.Serial('COM7', baudrate=9600, bytesize=8, parity='N', stopbits=1,
        #                     timeout=0.01)  # 打开端口，每一秒返回一个消息 ,设置自己的串口
        #
        # demo1 = b"G"  # 将0转换为ASCII码方便发送
        # demo2 = b"1"  # 同理
        # # try模块用来结束循环（靠抛出异常）
        # try:
        #     for i in range(1):
        #         # 通过电脑端给arduino发送起始命令：'G'
        #         c = input('请输入指令:')
        #         c = ord(c)  # 将c转换为UTF-8标准数字
        #         if (c == 48):
        #             ser.write(demo1)  # ser.write在于向串口中写入数据
        #         if (c == 49):
        #             ser.write(demo2)
        #         time = 0
        #         data = []
        #
        #         # 开始从arduino接收数据
        #         while(data == []): #直到读到有效数据才停止循环
        #             a = ser.readline()
        #
        #             if(str(a,encoding='gbk')!='' and str(a,encoding='gbk')!='\r\n'):
        #                 data.append(str(a,encoding='gbk'))
        #             time += 1
        #             if time >= 1000:
        #                 print('运行%d次，次数过多，未能读到数据' % (time))
        #                 break
        #         yy = data[0].split(',') # 将字符型数据分割成字符型列表
        #         y = [int(i) for i in yy if i.isdigit()] # 保存整型数据于y中
        #         y.append(sum(y)/255)
        #         print('运行第%d次，读取到数据:'%(time),y)
        #         print(len(y))
        # except Exception as e:
        #     print(e)
        #     ser.close()  # 抛出异常后关闭端口
        ##############################

        # matplotlib设置字体
        global system
        if system == 0:
            plt.rcParams['font.family']='SimHei'
            plt.rcParams['font.sans-serif']=['SimHei']
            plt.rcParams['axes.unicode_minus']=False
        else:
            plt.rcParams['font.sans-serif']=['Arial Unicode MS']  #mac中文显示方法，跟换字体文件名字可以更改显示出的文字类型
            plt.rcParams['axes.unicode_minus']=False

        # 设置标签
        fig, ax = self.fig, self.ax
        ax.set_title("wavelength——强度")
        ax.set_xlabel("wavelength")
        ax.set_ylabel("强度")  # 如若需要散点简单平滑曲线连接图，只要将scatter改成plot即可 plt.plot(x, y)

        max_i = y.index(max(y)); min_i = y.index(min(y))    # 获取y[i]最大、最小值对应的i
        ax.plot(x, y, color='b', linewidth=0.8, linestyle='-', label='光谱发生相关曲线')
        ax.axvline(x=x[max_i], ls="-.", c="red", linewidth=1)  # 添加垂直直线
        ax.axhline(y=max(y), ls="-.", c="red", linewidth=1, label='最大峰峰值')  # 添加垂直直线
        ax.axvline(x=x[min_i], ls="-.", c="green", linewidth=1)  # 添加垂直直线
        ax.axhline(y=min(y), ls="-.", c="green", linewidth=1, label='最大峰峰值')  # 添加垂直直线
        ax.legend(bbox_to_anchor=(0, 1), loc='lower left',
                  framealpha=0.5)  # 同时画多条曲线 图例设置参考：https://www.cnblogs.com/lfri/p/12248629.html

        # x、y轴精度设置
        my_x_ticks = np.arange(560, 1160, 20)
        my_y_ticks = np.arange(min(y) - (max(y) - min(y)) * 0.1, max(y) + (max(y) - min(y)) * 0.1, (max(y) - min(y)) / 20)
        plt.xticks(my_x_ticks, rotation=90)
        plt.yticks(my_y_ticks)

        # 网格设置
        plt.grid(b=True, color='b', linestyle='--', linewidth=0.5, alpha=0.3, axis='both', which='both')  # 网格、图例设置参考：https://www.cnblogs.com/zyg123/p/10519588.html

        # 鼠标滚轮移动实现图像放缩 参考：https://matplotlib.org/users/event_handling.html
        def call_back(event):
            axtemp = event.inaxes
            x_min, x_max = axtemp.get_xlim()
            y_min, y_max = axtemp.get_ylim()
            xfanwei = (x_max - x_min) / 10
            yfanwei = (y_max - y_min) / 10
            if event.button == 'up':
                axtemp.set(xlim=(x_min + xfanwei, x_max - xfanwei))
                axtemp.set(ylim=(y_min + yfanwei, y_max - yfanwei))
                # print('up')
            elif event.button == 'down':
                axtemp.set(xlim=(x_min - xfanwei, x_max + xfanwei))
                axtemp.set(ylim=(y_min - yfanwei, y_max + yfanwei))
                # print('down')
            Myfigure.fig.canvas.draw_idle()  # 绘图动作实时反映在图像上
        self.fig.canvas.mpl_connect('scroll_event', call_back)  # 滚轮移动事件实现反馈

        # 鼠标点击事件
        def on_press(event):
            print("my position:", event.button, event.xdata, event.ydata)

        self.fig.canvas.mpl_connect('button_press_event', on_press)  # 添加新功能：鼠标点击位置的输出
        # cursor = Cursor(ax, useblit=True, color='black', linewidth=0.5)  # 鼠标跟随十字架，定义颜色粗细
        # plt.show()
        self.draw()
        self.fig.canvas.mpl_connect('button_press_event', self.on_press)

    def on_press(self,event):
        global data_x, data_y, N_n, C_x, C_y, D_d
        N_n += 1
        data_x = event.xdata
        data_y = event.ydata
        print('you pressed', N_n, 'times,', event.xdata, event.ydata)

        C_x = C_x + (data_x-200)/200 * D_d  #计算新的中心点坐标
        C_y = C_y + (data_y-200)/200 * D_d
        D_d = 0.5**(N_n) * D_d #计算新的范围，0.5为放大倍数

        # plt.imshow(self.draw_mandlbrot(C_x, C_y, D_d, 400, 400))
        self.draw()
        self.fig.canvas.mpl_connect('button_press_event', self.on_press)
#############################################

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1012, 813)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setObjectName("graphicsView")
        self.gridLayout.addWidget(self.graphicsView, 0, 0, 1, 1)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.gridLayout.addLayout(self.verticalLayout, 3, 0, 1, 1)
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setEnabled(True)
        self.tabWidget.setMinimumSize(QtCore.QSize(251, 489))
        self.tabWidget.setMaximumSize(QtCore.QSize(251, 16777215))
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.groupSetting = QtWidgets.QGroupBox(self.tab)
        self.groupSetting.setGeometry(QtCore.QRect(10, 10, 221, 110))
        self.groupSetting.setMinimumSize(QtCore.QSize(221, 110))
        self.groupSetting.setMaximumSize(QtCore.QSize(221, 110))
        self.groupSetting.setObjectName("groupSetting")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.groupSetting)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 20, 201, 31))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.labelFruit = QtWidgets.QLabel(self.horizontalLayoutWidget)
        self.labelFruit.setObjectName("labelFruit")
        self.horizontalLayout.addWidget(self.labelFruit)
        self.comboBox = QtWidgets.QComboBox(self.horizontalLayoutWidget)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.horizontalLayout.addWidget(self.comboBox)
        self.horizontalLayoutWidget_3 = QtWidgets.QWidget(self.groupSetting)
        self.horizontalLayoutWidget_3.setGeometry(QtCore.QRect(10, 60, 199, 31))
        self.horizontalLayoutWidget_3.setObjectName("horizontalLayoutWidget_3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_3)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.pushWifi = QtWidgets.QPushButton(self.horizontalLayoutWidget_3)
        self.pushWifi.setObjectName("pushWifi")
        self.horizontalLayout_3.addWidget(self.pushWifi)
        self.labelWifi = QtWidgets.QLabel(self.horizontalLayoutWidget_3)
        self.labelWifi.setObjectName("labelWifi")
        self.horizontalLayout_3.addWidget(self.labelWifi)
        self.groupCurve = QtWidgets.QGroupBox(self.tab)
        self.groupCurve.setGeometry(QtCore.QRect(10, 130, 221, 211))
        self.groupCurve.setMinimumSize(QtCore.QSize(221, 211))
        self.groupCurve.setMaximumSize(QtCore.QSize(221, 211))
        self.groupCurve.setObjectName("groupCurve")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.groupCurve)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 30, 201, 168))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.labelScanTimes = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.labelScanTimes.setMaximumSize(QtCore.QSize(16777215, 28))
        self.labelScanTimes.setObjectName("labelScanTimes")
        self.horizontalLayout_2.addWidget(self.labelScanTimes)
        self.spinBox = QtWidgets.QSpinBox(self.verticalLayoutWidget)
        self.spinBox.setMinimum(1)
        self.spinBox.setMaximum(20)
        self.spinBox.setProperty("value", 3)
        self.spinBox.setObjectName("spinBox")
        self.horizontalLayout_2.addWidget(self.spinBox)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.pushDetection = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pushDetection.setObjectName("pushDetection")
        self.verticalLayout_2.addWidget(self.pushDetection)
        self.pushOriginal = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pushOriginal.setObjectName("pushOriginal")
        self.verticalLayout_2.addWidget(self.pushOriginal)
        self.pushDerivative = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pushDerivative.setObjectName("pushDerivative")
        self.verticalLayout_2.addWidget(self.pushDerivative)
        self.pushIntegral = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pushIntegral.setObjectName("pushIntegral")
        self.verticalLayout_2.addWidget(self.pushIntegral)
        self.tableWidget = QtWidgets.QTableWidget(self.tab)
        self.tableWidget.setGeometry(QtCore.QRect(10, 350, 221, 261))
        self.tableWidget.setMinimumSize(QtCore.QSize(221, 0))
        self.tableWidget.setMaximumSize(QtCore.QSize(221, 16777215))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(1)
        self.tableWidget.setRowCount(6)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(7)
        item.setFont(font)
        self.tableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(7)
        item.setFont(font)
        self.tableWidget.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(7)
        item.setFont(font)
        self.tableWidget.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(7)
        item.setFont(font)
        self.tableWidget.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(7)
        item.setFont(font)
        self.tableWidget.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(7)
        item.setFont(font)
        self.tableWidget.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(7)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(0, item)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.groupLine_1 = QtWidgets.QGroupBox(self.tab_2)
        self.groupLine_1.setGeometry(QtCore.QRect(10, 10, 221, 141))
        self.groupLine_1.setObjectName("groupLine_1")
        self.formLayoutWidget = QtWidgets.QWidget(self.groupLine_1)
        self.formLayoutWidget.setGeometry(QtCore.QRect(20, 20, 181, 101))
        self.formLayoutWidget.setObjectName("formLayoutWidget")
        self.formLayout = QtWidgets.QFormLayout(self.formLayoutWidget)
        self.formLayout.setContentsMargins(0, 0, 0, 0)
        self.formLayout.setObjectName("formLayout")
        self.labelLineWidth_1 = QtWidgets.QLabel(self.formLayoutWidget)
        self.labelLineWidth_1.setObjectName("labelLineWidth_1")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.labelLineWidth_1)
        self.horizontalSlider_1 = QtWidgets.QSlider(self.formLayoutWidget)
        self.horizontalSlider_1.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_1.setObjectName("horizontalSlider_1")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.horizontalSlider_1)
        self.labelColor_1 = QtWidgets.QLabel(self.formLayoutWidget)
        self.labelColor_1.setObjectName("labelColor_1")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.labelColor_1)
        self.comboColor_1 = QtWidgets.QComboBox(self.formLayoutWidget)
        self.comboColor_1.setObjectName("comboColor_1")
        self.comboColor_1.addItem("")
        self.comboColor_1.addItem("")
        self.comboColor_1.addItem("")
        self.comboColor_1.addItem("")
        self.comboColor_1.addItem("")
        self.comboColor_1.addItem("")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.comboColor_1)
        self.checkVisible_1 = QtWidgets.QCheckBox(self.formLayoutWidget)
        self.checkVisible_1.setChecked(True)
        self.checkVisible_1.setObjectName("checkVisible_1")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.checkVisible_1)
        self.groupLine_2 = QtWidgets.QGroupBox(self.tab_2)
        self.groupLine_2.setGeometry(QtCore.QRect(10, 170, 221, 141))
        self.groupLine_2.setObjectName("groupLine_2")
        self.formLayoutWidget_3 = QtWidgets.QWidget(self.groupLine_2)
        self.formLayoutWidget_3.setGeometry(QtCore.QRect(20, 20, 181, 172))
        self.formLayoutWidget_3.setObjectName("formLayoutWidget_3")
        self.formLayout_3 = QtWidgets.QFormLayout(self.formLayoutWidget_3)
        self.formLayout_3.setContentsMargins(0, 0, 0, 0)
        self.formLayout_3.setObjectName("formLayout_3")
        self.labelLineWidth_2 = QtWidgets.QLabel(self.formLayoutWidget_3)
        self.labelLineWidth_2.setObjectName("labelLineWidth_2")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.labelLineWidth_2)
        self.horizontalSlider_3 = QtWidgets.QSlider(self.formLayoutWidget_3)
        self.horizontalSlider_3.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_3.setObjectName("horizontalSlider_3")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.horizontalSlider_3)
        self.labelColor_2 = QtWidgets.QLabel(self.formLayoutWidget_3)
        self.labelColor_2.setObjectName("labelColor_2")
        self.formLayout_3.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.labelColor_2)
        self.comboColor_2 = QtWidgets.QComboBox(self.formLayoutWidget_3)
        self.comboColor_2.setObjectName("comboColor_2")
        self.comboColor_2.addItem("")
        self.comboColor_2.addItem("")
        self.comboColor_2.addItem("")
        self.comboColor_2.addItem("")
        self.comboColor_2.addItem("")
        self.comboColor_2.addItem("")
        self.formLayout_3.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.comboColor_2)
        self.checkVisible_2 = QtWidgets.QCheckBox(self.formLayoutWidget_3)
        self.checkVisible_2.setChecked(True)
        self.checkVisible_2.setObjectName("checkVisible_2")
        self.formLayout_3.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.checkVisible_2)
        self.groupLine_3 = QtWidgets.QGroupBox(self.tab_2)
        self.groupLine_3.setGeometry(QtCore.QRect(10, 330, 221, 141))
        self.groupLine_3.setObjectName("groupLine_3")
        self.formLayoutWidget_4 = QtWidgets.QWidget(self.groupLine_3)
        self.formLayoutWidget_4.setGeometry(QtCore.QRect(20, 20, 181, 101))
        self.formLayoutWidget_4.setObjectName("formLayoutWidget_4")
        self.formLayout_4 = QtWidgets.QFormLayout(self.formLayoutWidget_4)
        self.formLayout_4.setContentsMargins(0, 0, 0, 0)
        self.formLayout_4.setObjectName("formLayout_4")
        self.labelLineWidth_3 = QtWidgets.QLabel(self.formLayoutWidget_4)
        self.labelLineWidth_3.setObjectName("labelLineWidth_3")
        self.formLayout_4.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.labelLineWidth_3)
        self.horizontalSlider_4 = QtWidgets.QSlider(self.formLayoutWidget_4)
        self.horizontalSlider_4.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_4.setObjectName("horizontalSlider_4")
        self.formLayout_4.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.horizontalSlider_4)
        self.labelColor_3 = QtWidgets.QLabel(self.formLayoutWidget_4)
        self.labelColor_3.setObjectName("labelColor_3")
        self.formLayout_4.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.labelColor_3)
        self.comboColor_3 = QtWidgets.QComboBox(self.formLayoutWidget_4)
        self.comboColor_3.setObjectName("comboColor_3")
        self.comboColor_3.addItem("")
        self.comboColor_3.addItem("")
        self.comboColor_3.addItem("")
        self.comboColor_3.addItem("")
        self.comboColor_3.addItem("")
        self.comboColor_3.addItem("")
        self.formLayout_4.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.comboColor_3)
        self.checkVisible_3 = QtWidgets.QCheckBox(self.formLayoutWidget_4)
        self.checkVisible_3.setChecked(True)
        self.checkVisible_3.setObjectName("checkVisible_3")
        self.formLayout_4.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.checkVisible_3)
        self.pushButton = QtWidgets.QPushButton(self.tab_2)
        self.pushButton.setGeometry(QtCore.QRect(80, 490, 81, 31))
        self.pushButton.setObjectName("pushButton")
        self.tabWidget.addTab(self.tab_2, "")
        self.gridLayout.addWidget(self.tabWidget, 0, 2, 1, 1)
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setObjectName("textEdit")
        self.gridLayout.addWidget(self.textEdit, 2, 0, 1, 1)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout.addWidget(self.pushButton_2, 1, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1012, 26))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuSave = QtWidgets.QMenu(self.menuFile)
        self.menuSave.setObjectName("menuSave")
        self.menuSettings = QtWidgets.QMenu(self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew = QtWidgets.QAction(MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave_Data = QtWidgets.QAction(MainWindow)
        self.actionSave_Data.setObjectName("actionSave_Data")
        self.actionSave_Graph = QtWidgets.QAction(MainWindow)
        self.actionSave_Graph.setObjectName("actionSave_Graph")
        self.actionLine = QtWidgets.QAction(MainWindow)
        self.actionLine.setObjectName("actionLine")
        self.actionUsage = QtWidgets.QAction(MainWindow)
        self.actionUsage.setObjectName("actionUsage")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionCopyright = QtWidgets.QAction(MainWindow)
        self.actionCopyright.setObjectName("actionCopyright")
        self.actionWi_Fi_Setting = QtWidgets.QAction(MainWindow)
        self.actionWi_Fi_Setting.setObjectName("actionWi_Fi_Setting")
        self.menuSave.addAction(self.actionSave_Data)
        self.menuSave.addAction(self.actionSave_Graph)
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.menuSave.menuAction())
        self.menuSettings.addAction(self.actionLine)
        self.menuSettings.addAction(self.actionWi_Fi_Setting)
        self.menuHelp.addAction(self.actionUsage)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionCopyright)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuSettings.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        ################ 尾代码 ###############
        # # widgets
        self.figure = Myfigure()
        # self.setWindowTitle('Mandlort_Calculater')
        # self.fig_ntb = NavigationToolbar(self.figure, self)  # 注意，记得指向figure的FigureCanvas
        # self.button_draw = QPushButton("绘图")
        # self.button_draw.setFont(QFont("Roman times", 10, QFont.Bold))
        # self.label = QLabel('')
        # self.label.setFont(QFont("Roman times", 8, QFont.Bold))
        # timer = QTimer(self)  # 设置一个定时器用来刷新label显示的坐标
        # timer.timeout.connect(self.time_Event)
        # timer.start(1000)

        # 连接事件
        # self.pushButton_2.clicked.connect(self.figure.drawing)
        # self.pushButton.clicked.connect(self.figure.change_sys)

        self.layout = QtWidgets.QVBoxLayout()
        self.layout.setObjectName("drawingLayout")
        self.gridLayout.addLayout(self.layout, 0, 0, 1, 1) # 前两个参数代表画布相对于ui界面的位置，后两个参数代表画布坐标轴的长度
        # # 设置布局
        # layout = QVBoxLayout()
        self.layout.addWidget(self.figure)
        # self.layout.addWidget(self.fig_ntb)
        # layout.addWidget(self.button_draw)
        # layout.addWidget(self.label)
        # self.setLayout(layout)
        ###################################################

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "水果光谱检测"))
        self.groupSetting.setTitle(_translate("MainWindow", "Setting"))
        self.labelFruit.setText(_translate("MainWindow", "Fruit"))
        self.comboBox.setItemText(0, _translate("MainWindow", "None"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Apple"))
        self.pushWifi.setText(_translate("MainWindow", "Wi-Fi"))
        self.labelWifi.setText(_translate("MainWindow", "unconnected"))
        self.groupCurve.setTitle(_translate("MainWindow", "Curve"))
        self.labelScanTimes.setText(_translate("MainWindow", "ScanTimes"))
        self.pushDetection.setText(_translate("MainWindow", "Spectral Detection"))
        self.pushOriginal.setText(_translate("MainWindow", "Original Time"))
        self.pushDerivative.setText(_translate("MainWindow", "Derivative Time"))
        self.pushIntegral.setText(_translate("MainWindow", "Integral Time"))
        item = self.tableWidget.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "Energy"))
        item = self.tableWidget.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "Carbohydrates"))
        item = self.tableWidget.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "-Sugars"))
        item = self.tableWidget.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "Protein"))
        item = self.tableWidget.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.tableWidget.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "Sodium"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Per 100g"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "检测"))
        self.groupLine_1.setTitle(_translate("MainWindow", "Line1"))
        self.labelLineWidth_1.setText(_translate("MainWindow", "Width"))
        self.labelColor_1.setText(_translate("MainWindow", "Color"))
        self.comboColor_1.setItemText(0, _translate("MainWindow", "Black"))
        self.comboColor_1.setItemText(1, _translate("MainWindow", "Gray"))
        self.comboColor_1.setItemText(2, _translate("MainWindow", "White"))
        self.comboColor_1.setItemText(3, _translate("MainWindow", "Red"))
        self.comboColor_1.setItemText(4, _translate("MainWindow", "Green"))
        self.comboColor_1.setItemText(5, _translate("MainWindow", "Blue"))
        self.checkVisible_1.setText(_translate("MainWindow", "Visible1"))
        self.groupLine_2.setTitle(_translate("MainWindow", "Line2"))
        self.labelLineWidth_2.setText(_translate("MainWindow", "Width"))
        self.labelColor_2.setText(_translate("MainWindow", "Color"))
        self.comboColor_2.setItemText(0, _translate("MainWindow", "Green"))
        self.comboColor_2.setItemText(1, _translate("MainWindow", "Black"))
        self.comboColor_2.setItemText(2, _translate("MainWindow", "Gray"))
        self.comboColor_2.setItemText(3, _translate("MainWindow", "White"))
        self.comboColor_2.setItemText(4, _translate("MainWindow", "Red"))
        self.comboColor_2.setItemText(5, _translate("MainWindow", "Blue"))
        self.checkVisible_2.setText(_translate("MainWindow", "Visible2"))
        self.groupLine_3.setTitle(_translate("MainWindow", "Line3"))
        self.labelLineWidth_3.setText(_translate("MainWindow", "Width"))
        self.labelColor_3.setText(_translate("MainWindow", "Color"))
        self.comboColor_3.setItemText(0, _translate("MainWindow", "Red"))
        self.comboColor_3.setItemText(1, _translate("MainWindow", "Black"))
        self.comboColor_3.setItemText(2, _translate("MainWindow", "Gray"))
        self.comboColor_3.setItemText(3, _translate("MainWindow", "White"))
        self.comboColor_3.setItemText(4, _translate("MainWindow", "Green"))
        self.comboColor_3.setItemText(5, _translate("MainWindow", "Blue"))
        self.checkVisible_3.setText(_translate("MainWindow", "Visible3"))
        self.pushButton.setText(_translate("MainWindow", "切换系统：windows-mac"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "设置"))
        self.pushButton_2.setText(_translate("MainWindow", "PushButton"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuSave.setTitle(_translate("MainWindow", "Save"))
        self.menuSettings.setTitle(_translate("MainWindow", "Settings"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionSave_Data.setText(_translate("MainWindow", "Save Data"))
        self.actionSave_Graph.setText(_translate("MainWindow", "Save Graph"))
        self.actionLine.setText(_translate("MainWindow", "Line Setting"))
        self.actionUsage.setText(_translate("MainWindow", "Usage"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionCopyright.setText(_translate("MainWindow", "Copyright"))
        self.actionWi_Fi_Setting.setText(_translate("MainWindow", "Wi-Fi Setting"))
